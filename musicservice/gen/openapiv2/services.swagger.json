{
  "swagger": "2.0",
  "info": {
    "title": "musicservice/v1/models.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AlbumService"
    },
    {
      "name": "ArtistService"
    },
    {
      "name": "LabelService"
    },
    {
      "name": "SongService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/albums": {
      "get": {
        "summary": "Finds and retrieves albums matching the particular criteria.",
        "operationId": "AlbumService_ListAlbums",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAlbumsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageKey",
            "description": "Instead of an offset an abstract  \"page\" key is provided that offers\nan opaque \"pointer\" into some offset in a result set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "description": "Number of results to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AlbumService"
        ]
      },
      "post": {
        "summary": "Create a new Album",
        "operationId": "AlbumService_CreateAlbum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAlbumResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAlbumRequest"
            }
          }
        ],
        "tags": [
          "AlbumService"
        ]
      }
    },
    "/v1/albums/{album.id}": {
      "patch": {
        "summary": "Updates specific fields of an Album",
        "operationId": "AlbumService_UpdateAlbum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAlbumResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "album.id",
            "description": "ID of the Album",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Album being updated",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Album"
            }
          },
          {
            "name": "updateMask",
            "description": "Mask of fields being updated in this Album to make partial changes.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AlbumService"
        ]
      }
    },
    "/v1/albums:batchGet": {
      "get": {
        "summary": "Batch gets multiple albums.",
        "operationId": "AlbumService_GetAlbums",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAlbumsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "AlbumService"
        ]
      }
    },
    "/v1/artists": {
      "get": {
        "summary": "Finds and retrieves artists matching the particular criteria.",
        "operationId": "ArtistService_ListArtists",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListArtistsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageKey",
            "description": "Instead of an offset an abstract  \"page\" key is provided that offers\nan opaque \"pointer\" into some offset in a result set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "description": "Number of results to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ArtistService"
        ]
      },
      "post": {
        "summary": "Create a new Artist",
        "operationId": "ArtistService_CreateArtist",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateArtistResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateArtistRequest"
            }
          }
        ],
        "tags": [
          "ArtistService"
        ]
      }
    },
    "/v1/artists/{artist.id}": {
      "patch": {
        "summary": "Updates specific fields of an Artist",
        "operationId": "ArtistService_UpdateArtist",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateArtistResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "artist.id",
            "description": "ID of the artist",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Artist being updated",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Artist"
            }
          },
          {
            "name": "updateMask",
            "description": "Mask of fields being updated in this Artist to make partial changes.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ArtistService"
        ]
      }
    },
    "/v1/artists:batchGet": {
      "get": {
        "summary": "Batch gets multiple artists.",
        "operationId": "ArtistService_GetArtists",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetArtistsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ArtistService"
        ]
      }
    },
    "/v1/labels": {
      "get": {
        "summary": "Finds and retrieves labels matching the particular criteria.",
        "operationId": "LabelService_ListLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListLabelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageKey",
            "description": "Instead of an offset an abstract  \"page\" key is provided that offers\nan opaque \"pointer\" into some offset in a result set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "description": "Number of results to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "LabelService"
        ]
      },
      "post": {
        "summary": "Create a new Label",
        "operationId": "LabelService_CreateLabel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateLabelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateLabelRequest"
            }
          }
        ],
        "tags": [
          "LabelService"
        ]
      }
    },
    "/v1/labels/{label.id}": {
      "patch": {
        "summary": "Updates specific fields of an Label",
        "operationId": "LabelService_UpdateLabel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateLabelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "label.id",
            "description": "ID of this label",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Label being updated",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/musicservicev1Label"
            }
          },
          {
            "name": "updateMask",
            "description": "Mask of fields being updated in this Label to make partial changes.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LabelService"
        ]
      }
    },
    "/v1/labels:batchGet": {
      "get": {
        "summary": "Batch gets multiple labels.",
        "operationId": "LabelService_GetLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLabelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "LabelService"
        ]
      }
    },
    "/v1/nodes/{id}": {
      "delete": {
        "summary": "Deletes an song from our system.",
        "operationId": "SongService_DeleteSong",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSongResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the song to be deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SongService"
        ]
      }
    },
    "/v1/songs": {
      "get": {
        "summary": "Finds and retrieves songs matching the particular criteria.",
        "operationId": "SongService_ListSongs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSongsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageKey",
            "description": "Instead of an offset an abstract  \"page\" key is provided that offers\nan opaque \"pointer\" into some offset in a result set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "description": "Number of results to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "SongService"
        ]
      },
      "post": {
        "summary": "Create a new Song",
        "operationId": "SongService_CreateSong",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSongResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSongRequest"
            }
          }
        ],
        "tags": [
          "SongService"
        ]
      }
    },
    "/v1/songs/{song.id}": {
      "patch": {
        "summary": "Updates specific fields of an Song",
        "operationId": "SongService_UpdateSong",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSongResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "song.id",
            "description": "ID of this song",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Song being updated",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Song"
            }
          },
          {
            "name": "updateMask",
            "description": "Mask of fields being updated in this Song to make partial changes.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SongService"
        ]
      }
    },
    "/v1/songs:batchGet": {
      "get": {
        "summary": "Batch gets multiple songs.",
        "operationId": "SongService_GetSongs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSongsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "SongService"
        ]
      }
    }
  },
  "definitions": {
    "musicservicev1Label": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "title": "ID of this label"
        },
        "name": {
          "type": "string",
          "title": "Name of this record label company (eg, \"Virgin Records\")"
        },
        "establishedDate": {
          "type": "string",
          "format": "date-time",
          "title": "When this company was established"
        }
      },
      "description": "A record label company.   This entity is the owner of albums as they produce and release them.\nNote unlike the Album entity the Label does not contain a (repeated) field of all albums it\nowns.   This is because the way the albums are added to or removed from a Label's collection\nis via the API."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddAlbumResponse": {
      "type": "object",
      "title": "Response for an AddAlbum request"
    },
    "v1Album": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "title": "ID of the Album"
        },
        "name": {
          "type": "string",
          "title": "Album name"
        },
        "songIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Songs performed in this album"
        },
        "venue": {
          "type": "string",
          "title": "Where this album was performed"
        },
        "releaseDate": {
          "type": "string",
          "format": "date-time",
          "title": "Date released on"
        }
      },
      "description": "Album showcasing a bunch of artists performing a bunch of songs."
    },
    "v1Artist": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "title": "ID of the artist"
        },
        "name": {
          "type": "string",
          "title": "Full name of the artist"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time",
          "title": "Artist's date of birth"
        },
        "country": {
          "type": "string",
          "title": "Country of residence"
        }
      },
      "title": "Artists perform/play/sing songs"
    },
    "v1CreateAlbumRequest": {
      "type": "object",
      "properties": {
        "album": {
          "$ref": "#/definitions/v1Album",
          "title": "Album being updated"
        }
      },
      "title": "Album creation request object"
    },
    "v1CreateAlbumResponse": {
      "type": "object",
      "properties": {
        "album": {
          "$ref": "#/definitions/v1Album",
          "title": "Album being created"
        }
      },
      "description": "Response of an album creation."
    },
    "v1CreateArtistRequest": {
      "type": "object",
      "properties": {
        "artist": {
          "$ref": "#/definitions/v1Artist",
          "title": "Artist being updated"
        }
      },
      "title": "Artist creation request object"
    },
    "v1CreateArtistResponse": {
      "type": "object",
      "properties": {
        "artist": {
          "$ref": "#/definitions/v1Artist",
          "title": "Artist being created"
        }
      },
      "description": "Response of an artist creation."
    },
    "v1CreateLabelRequest": {
      "type": "object",
      "properties": {
        "label": {
          "$ref": "#/definitions/musicservicev1Label",
          "title": "Label being updated"
        }
      },
      "title": "Label creation request object"
    },
    "v1CreateLabelResponse": {
      "type": "object",
      "properties": {
        "label": {
          "$ref": "#/definitions/musicservicev1Label",
          "title": "Label being created"
        }
      },
      "description": "Response of an label creation."
    },
    "v1CreateSongRequest": {
      "type": "object",
      "properties": {
        "song": {
          "$ref": "#/definitions/v1Song",
          "title": "Song being updated"
        }
      },
      "title": "Song creation request object"
    },
    "v1CreateSongResponse": {
      "type": "object",
      "properties": {
        "song": {
          "$ref": "#/definitions/v1Song",
          "title": "Song being created"
        }
      },
      "description": "Response of an song creation."
    },
    "v1DeleteAlbumResponse": {
      "type": "object",
      "title": "Album deletion response"
    },
    "v1DeleteArtistResponse": {
      "type": "object",
      "title": "Artist deletion response"
    },
    "v1DeleteLabelResponse": {
      "type": "object",
      "title": "Label deletion response"
    },
    "v1DeleteSongResponse": {
      "type": "object",
      "title": "Song deletion response"
    },
    "v1GetAlbumsResponse": {
      "type": "object",
      "properties": {
        "albums": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Album"
          },
          "description": "Albums mapped by their ID."
        }
      },
      "description": "Response for an album batch get."
    },
    "v1GetArtistsResponse": {
      "type": "object",
      "properties": {
        "artists": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Artist"
          },
          "description": "Artists mapped by their ID."
        }
      },
      "description": "Response for an artist batch get."
    },
    "v1GetLabelsResponse": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/musicservicev1Label"
          },
          "description": "Labels mapped by their ID."
        }
      },
      "description": "Response for an label batch get."
    },
    "v1GetSongsResponse": {
      "type": "object",
      "properties": {
        "songs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Song"
          },
          "description": "Songs mapped by their ID."
        }
      },
      "description": "Response for an song batch get."
    },
    "v1LabelServiceListAlbumsResponse": {
      "type": "object",
      "properties": {
        "albums": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Album"
          },
          "description": "List of albums."
        },
        "nextPageKey": {
          "type": "string",
          "description": "The key/pointer string that subsequent List requests should pass to\ncontinue the pagination."
        }
      },
      "description": "Response for listing albums in a label."
    },
    "v1ListAlbumsResponse": {
      "type": "object",
      "properties": {
        "albums": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Album"
          },
          "description": "The list of albums found as part of this response."
        },
        "nextPageKey": {
          "type": "string",
          "description": "The key/pointer string that subsequent List requests should pass to\ncontinue the pagination."
        }
      },
      "description": "Response of a album search/listing."
    },
    "v1ListArtistsResponse": {
      "type": "object",
      "properties": {
        "artists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Artist"
          },
          "description": "The list of artists found as part of this response."
        },
        "nextPageKey": {
          "type": "string",
          "description": "The key/pointer string that subsequent List requests should pass to\ncontinue the pagination."
        }
      },
      "description": "Response of a artist search/listing."
    },
    "v1ListLabelsResponse": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/musicservicev1Label"
          },
          "description": "The list of labels found as part of this response."
        },
        "nextPageKey": {
          "type": "string",
          "description": "The key/pointer string that subsequent List requests should pass to\ncontinue the pagination."
        }
      },
      "description": "Response of a label search/listing."
    },
    "v1ListSongsResponse": {
      "type": "object",
      "properties": {
        "songs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Song"
          },
          "description": "The list of songs found as part of this response."
        },
        "nextPageKey": {
          "type": "string",
          "description": "The key/pointer string that subsequent List requests should pass to\ncontinue the pagination."
        }
      },
      "description": "Response of a song search/listing."
    },
    "v1RemoveAlbumResponse": {
      "type": "object",
      "title": "Response for an RemoveAlbum request"
    },
    "v1Song": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "title": "ID of this song"
        },
        "name": {
          "type": "string",
          "title": "Name for this song"
        },
        "composerId": {
          "type": "string",
          "title": "ID of the composer/artist for this Song"
        },
        "homepage": {
          "type": "string",
          "title": "A homepage containing all other info about the Song"
        },
        "performerIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "All performing artists for this song"
        }
      },
      "title": "A song - eg Jingle Bells"
    },
    "v1UpdateAlbumResponse": {
      "type": "object",
      "properties": {
        "album": {
          "$ref": "#/definitions/v1Album",
          "title": "Album being updated"
        }
      },
      "description": "The request for (partially) updating an Album."
    },
    "v1UpdateArtistResponse": {
      "type": "object",
      "properties": {
        "artist": {
          "$ref": "#/definitions/v1Artist",
          "title": "Artist being updated"
        }
      },
      "description": "The request for (partially) updating an Artist."
    },
    "v1UpdateLabelResponse": {
      "type": "object",
      "properties": {
        "label": {
          "$ref": "#/definitions/musicservicev1Label",
          "title": "Label being updated"
        }
      },
      "description": "The request for (partially) updating an Label."
    },
    "v1UpdateSongResponse": {
      "type": "object",
      "properties": {
        "song": {
          "$ref": "#/definitions/v1Song",
          "title": "Song being updated"
        }
      },
      "description": "The request for (partially) updating an Song."
    }
  }
}
