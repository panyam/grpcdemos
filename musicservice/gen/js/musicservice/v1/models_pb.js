// @generated by protoc-gen-es v1.1.1
// @generated from file musicservice/v1/models.proto (package musicservice, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * A song - eg Jingle Bells
 *
 * @generated from message musicservice.Song
 */
export const Song = proto3.makeMessageType(
  "musicservice.Song",
  () => [
    { no: 1, name: "created_at", kind: "message", T: Timestamp },
    { no: 2, name: "updated_at", kind: "message", T: Timestamp },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "composer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "homepage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "performer_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * Artists perform/play/sing songs
 *
 * @generated from message musicservice.Artist
 */
export const Artist = proto3.makeMessageType(
  "musicservice.Artist",
  () => [
    { no: 1, name: "created_at", kind: "message", T: Timestamp },
    { no: 2, name: "updated_at", kind: "message", T: Timestamp },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "date_of_birth", kind: "message", T: Timestamp },
    { no: 7, name: "country", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Album showcasing a bunch of artists performing a bunch of songs.
 *
 * @generated from message musicservice.Album
 */
export const Album = proto3.makeMessageType(
  "musicservice.Album",
  () => [
    { no: 1, name: "created_at", kind: "message", T: Timestamp },
    { no: 2, name: "updated_at", kind: "message", T: Timestamp },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "song_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "venue", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "release_date", kind: "message", T: Timestamp },
  ],
);

/**
 * A record label company.   This entity is the owner of albums as they produce and release them.
 * Note unlike the Album entity the Label does not contain a (repeated) field of all albums it
 * owns.   This is because the way the albums are added to or removed from a Label's collection
 * is via the API.
 *
 * @generated from message musicservice.Label
 */
export const Label = proto3.makeMessageType(
  "musicservice.Label",
  () => [
    { no: 1, name: "created_at", kind: "message", T: Timestamp },
    { no: 2, name: "updated_at", kind: "message", T: Timestamp },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "established_date", kind: "message", T: Timestamp },
  ],
);

