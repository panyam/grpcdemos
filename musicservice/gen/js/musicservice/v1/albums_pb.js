// @generated by protoc-gen-es v1.1.1
// @generated from file musicservice/v1/albums.proto (package musicservice, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3 } from "@bufbuild/protobuf";
import { Album } from "./models_pb.js";

/**
 *
 * Album creation request object
 *
 * @generated from message musicservice.CreateAlbumRequest
 */
export const CreateAlbumRequest = proto3.makeMessageType(
  "musicservice.CreateAlbumRequest",
  () => [
    { no: 1, name: "album", kind: "message", T: Album },
  ],
);

/**
 *
 * Response of an album creation.
 *
 * @generated from message musicservice.CreateAlbumResponse
 */
export const CreateAlbumResponse = proto3.makeMessageType(
  "musicservice.CreateAlbumResponse",
  () => [
    { no: 1, name: "album", kind: "message", T: Album },
  ],
);

/**
 *
 * The request for (partially) updating an Album.
 *
 * @generated from message musicservice.UpdateAlbumRequest
 */
export const UpdateAlbumRequest = proto3.makeMessageType(
  "musicservice.UpdateAlbumRequest",
  () => [
    { no: 1, name: "album", kind: "message", T: Album },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ],
);

/**
 *
 * The request for (partially) updating an Album.
 *
 * @generated from message musicservice.UpdateAlbumResponse
 */
export const UpdateAlbumResponse = proto3.makeMessageType(
  "musicservice.UpdateAlbumResponse",
  () => [
    { no: 1, name: "album", kind: "message", T: Album },
  ],
);

/**
 *
 * Batch gets multiple albums.
 *
 * @generated from message musicservice.GetAlbumsRequest
 */
export const GetAlbumsRequest = proto3.makeMessageType(
  "musicservice.GetAlbumsRequest",
  () => [
    { no: 1, name: "ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 *
 * Response for an album batch get.
 *
 * @generated from message musicservice.GetAlbumsResponse
 */
export const GetAlbumsResponse = proto3.makeMessageType(
  "musicservice.GetAlbumsResponse",
  () => [
    { no: 1, name: "albums", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Album} },
  ],
);

/**
 *
 * An album search request.  For now only paginations params are provided.
 *
 * @generated from message musicservice.ListAlbumsRequest
 */
export const ListAlbumsRequest = proto3.makeMessageType(
  "musicservice.ListAlbumsRequest",
  () => [
    { no: 1, name: "page_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 *
 * Response of a album search/listing.
 *
 * @generated from message musicservice.ListAlbumsResponse
 */
export const ListAlbumsResponse = proto3.makeMessageType(
  "musicservice.ListAlbumsResponse",
  () => [
    { no: 1, name: "albums", kind: "message", T: Album, repeated: true },
    { no: 2, name: "next_page_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Request to delete an album.
 *
 * @generated from message musicservice.DeleteAlbumRequest
 */
export const DeleteAlbumRequest = proto3.makeMessageType(
  "musicservice.DeleteAlbumRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Album deletion response
 *
 * @generated from message musicservice.DeleteAlbumResponse
 */
export const DeleteAlbumResponse = proto3.makeMessageType(
  "musicservice.DeleteAlbumResponse",
  [],
);

