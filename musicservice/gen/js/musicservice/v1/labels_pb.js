// @generated by protoc-gen-es v1.1.1
// @generated from file musicservice/v1/labels.proto (package musicservice, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3 } from "@bufbuild/protobuf";
import { Album, Label } from "./models_pb.js";

/**
 *
 * Label creation request object
 *
 * @generated from message musicservice.CreateLabelRequest
 */
export const CreateLabelRequest = proto3.makeMessageType(
  "musicservice.CreateLabelRequest",
  () => [
    { no: 1, name: "label", kind: "message", T: Label },
  ],
);

/**
 *
 * Response of an label creation.
 *
 * @generated from message musicservice.CreateLabelResponse
 */
export const CreateLabelResponse = proto3.makeMessageType(
  "musicservice.CreateLabelResponse",
  () => [
    { no: 1, name: "label", kind: "message", T: Label },
  ],
);

/**
 *
 * The request for (partially) updating an Label.
 *
 * @generated from message musicservice.UpdateLabelRequest
 */
export const UpdateLabelRequest = proto3.makeMessageType(
  "musicservice.UpdateLabelRequest",
  () => [
    { no: 1, name: "label", kind: "message", T: Label },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ],
);

/**
 *
 * The request for (partially) updating an Label.
 *
 * @generated from message musicservice.UpdateLabelResponse
 */
export const UpdateLabelResponse = proto3.makeMessageType(
  "musicservice.UpdateLabelResponse",
  () => [
    { no: 1, name: "label", kind: "message", T: Label },
  ],
);

/**
 *
 * Batch gets multiple labels.
 *
 * @generated from message musicservice.GetLabelsRequest
 */
export const GetLabelsRequest = proto3.makeMessageType(
  "musicservice.GetLabelsRequest",
  () => [
    { no: 1, name: "ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 *
 * Response for an label batch get.
 *
 * @generated from message musicservice.GetLabelsResponse
 */
export const GetLabelsResponse = proto3.makeMessageType(
  "musicservice.GetLabelsResponse",
  () => [
    { no: 1, name: "labels", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Label} },
  ],
);

/**
 *
 * An label search request.  For now only paginations params are provided.
 *
 * @generated from message musicservice.ListLabelsRequest
 */
export const ListLabelsRequest = proto3.makeMessageType(
  "musicservice.ListLabelsRequest",
  () => [
    { no: 1, name: "page_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 *
 * Response of a label search/listing.
 *
 * @generated from message musicservice.ListLabelsResponse
 */
export const ListLabelsResponse = proto3.makeMessageType(
  "musicservice.ListLabelsResponse",
  () => [
    { no: 1, name: "labels", kind: "message", T: Label, repeated: true },
    { no: 2, name: "next_page_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Request to delete an label.
 *
 * @generated from message musicservice.DeleteLabelRequest
 */
export const DeleteLabelRequest = proto3.makeMessageType(
  "musicservice.DeleteLabelRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Label deletion response
 *
 * @generated from message musicservice.DeleteLabelResponse
 */
export const DeleteLabelResponse = proto3.makeMessageType(
  "musicservice.DeleteLabelResponse",
  [],
);

/**
 *
 * Request to add an album to a label.
 *
 * @generated from message musicservice.AddAlbumRequest
 */
export const AddAlbumRequest = proto3.makeMessageType(
  "musicservice.AddAlbumRequest",
  () => [
    { no: 1, name: "label_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "album_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Response for an AddAlbum request
 *
 * @generated from message musicservice.AddAlbumResponse
 */
export const AddAlbumResponse = proto3.makeMessageType(
  "musicservice.AddAlbumResponse",
  [],
);

/**
 *
 * Request to remove an album to a label.
 *
 * @generated from message musicservice.RemoveAlbumRequest
 */
export const RemoveAlbumRequest = proto3.makeMessageType(
  "musicservice.RemoveAlbumRequest",
  () => [
    { no: 1, name: "label_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "album_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Response for an RemoveAlbum request
 *
 * @generated from message musicservice.RemoveAlbumResponse
 */
export const RemoveAlbumResponse = proto3.makeMessageType(
  "musicservice.RemoveAlbumResponse",
  [],
);

/**
 *
 * Request object for an album listing.
 *
 * @generated from message musicservice.ListAlbumsInLabelRequest
 */
export const ListAlbumsInLabelRequest = proto3.makeMessageType(
  "musicservice.ListAlbumsInLabelRequest",
  () => [
    { no: 1, name: "page_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 *
 * Response for listing albums in a label.
 *
 * @generated from message musicservice.ListAlbumsInLabelResponse
 */
export const ListAlbumsInLabelResponse = proto3.makeMessageType(
  "musicservice.ListAlbumsInLabelResponse",
  () => [
    { no: 1, name: "albums", kind: "message", T: Album, repeated: true },
    { no: 2, name: "next_page_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

