// @generated by protoc-gen-es v1.2.0
// @generated from file musicservice/v1/artists.proto (package musicservice.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, FieldMask, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Artist } from "./models_pb.js";

/**
 *
 * Artist creation request object
 *
 * @generated from message musicservice.v1.CreateArtistRequest
 */
export declare class CreateArtistRequest extends Message<CreateArtistRequest> {
  /**
   *
   * Artist being updated
   *
   * @generated from field: musicservice.v1.Artist artist = 1;
   */
  artist?: Artist;

  constructor(data?: PartialMessage<CreateArtistRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.CreateArtistRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateArtistRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateArtistRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateArtistRequest;

  static equals(a: CreateArtistRequest | PlainMessage<CreateArtistRequest> | undefined, b: CreateArtistRequest | PlainMessage<CreateArtistRequest> | undefined): boolean;
}

/**
 *
 * Response of an artist creation.
 *
 * @generated from message musicservice.v1.CreateArtistResponse
 */
export declare class CreateArtistResponse extends Message<CreateArtistResponse> {
  /**
   *
   * Artist being created
   *
   * @generated from field: musicservice.v1.Artist artist = 1;
   */
  artist?: Artist;

  constructor(data?: PartialMessage<CreateArtistResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.CreateArtistResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateArtistResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateArtistResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateArtistResponse;

  static equals(a: CreateArtistResponse | PlainMessage<CreateArtistResponse> | undefined, b: CreateArtistResponse | PlainMessage<CreateArtistResponse> | undefined): boolean;
}

/**
 *
 * The request for (partially) updating an Artist.
 *
 * @generated from message musicservice.v1.UpdateArtistRequest
 */
export declare class UpdateArtistRequest extends Message<UpdateArtistRequest> {
  /**
   *
   * Artist being updated
   *
   * @generated from field: musicservice.v1.Artist artist = 1;
   */
  artist?: Artist;

  /**
   *
   * Mask of fields being updated in this Artist to make partial changes.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateArtistRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.UpdateArtistRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateArtistRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateArtistRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateArtistRequest;

  static equals(a: UpdateArtistRequest | PlainMessage<UpdateArtistRequest> | undefined, b: UpdateArtistRequest | PlainMessage<UpdateArtistRequest> | undefined): boolean;
}

/**
 *
 * The request for (partially) updating an Artist.
 *
 * @generated from message musicservice.v1.UpdateArtistResponse
 */
export declare class UpdateArtistResponse extends Message<UpdateArtistResponse> {
  /**
   *
   * Artist being updated
   *
   * @generated from field: musicservice.v1.Artist artist = 1;
   */
  artist?: Artist;

  constructor(data?: PartialMessage<UpdateArtistResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.UpdateArtistResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateArtistResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateArtistResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateArtistResponse;

  static equals(a: UpdateArtistResponse | PlainMessage<UpdateArtistResponse> | undefined, b: UpdateArtistResponse | PlainMessage<UpdateArtistResponse> | undefined): boolean;
}

/**
 *
 * Batch gets multiple artists.
 *
 * @generated from message musicservice.v1.GetArtistsRequest
 */
export declare class GetArtistsRequest extends Message<GetArtistsRequest> {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];

  constructor(data?: PartialMessage<GetArtistsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.GetArtistsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetArtistsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetArtistsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetArtistsRequest;

  static equals(a: GetArtistsRequest | PlainMessage<GetArtistsRequest> | undefined, b: GetArtistsRequest | PlainMessage<GetArtistsRequest> | undefined): boolean;
}

/**
 *
 * Response for an artist batch get.
 *
 * @generated from message musicservice.v1.GetArtistsResponse
 */
export declare class GetArtistsResponse extends Message<GetArtistsResponse> {
  /**
   *
   * Artists mapped by their ID.
   *
   * @generated from field: map<string, musicservice.v1.Artist> artists = 1;
   */
  artists: { [key: string]: Artist };

  constructor(data?: PartialMessage<GetArtistsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.GetArtistsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetArtistsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetArtistsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetArtistsResponse;

  static equals(a: GetArtistsResponse | PlainMessage<GetArtistsResponse> | undefined, b: GetArtistsResponse | PlainMessage<GetArtistsResponse> | undefined): boolean;
}

/**
 *
 * An artist search request.  For now only paginations params are provided.
 *
 * @generated from message musicservice.v1.ListArtistsRequest
 */
export declare class ListArtistsRequest extends Message<ListArtistsRequest> {
  /**
   *
   * Instead of an offset an abstract  "page" key is provided that offers
   * an opaque "pointer" into some offset in a result set.
   *
   * @generated from field: string page_key = 1;
   */
  pageKey: string;

  /**
   *
   * Number of results to return.
   *
   * @generated from field: int32 count = 2;
   */
  count: number;

  constructor(data?: PartialMessage<ListArtistsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.ListArtistsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListArtistsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListArtistsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListArtistsRequest;

  static equals(a: ListArtistsRequest | PlainMessage<ListArtistsRequest> | undefined, b: ListArtistsRequest | PlainMessage<ListArtistsRequest> | undefined): boolean;
}

/**
 *
 * Response of a artist search/listing.
 *
 * @generated from message musicservice.v1.ListArtistsResponse
 */
export declare class ListArtistsResponse extends Message<ListArtistsResponse> {
  /**
   *
   * The list of artists found as part of this response.
   *
   * @generated from field: repeated musicservice.v1.Artist artists = 1;
   */
  artists: Artist[];

  /**
   *
   * The key/pointer string that subsequent List requests should pass to
   * continue the pagination.
   *
   * @generated from field: string next_page_key = 2;
   */
  nextPageKey: string;

  constructor(data?: PartialMessage<ListArtistsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.ListArtistsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListArtistsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListArtistsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListArtistsResponse;

  static equals(a: ListArtistsResponse | PlainMessage<ListArtistsResponse> | undefined, b: ListArtistsResponse | PlainMessage<ListArtistsResponse> | undefined): boolean;
}

/**
 *
 * Request to delete an artist.
 *
 * @generated from message musicservice.v1.DeleteArtistRequest
 */
export declare class DeleteArtistRequest extends Message<DeleteArtistRequest> {
  /**
   *
   * ID of the artist to be deleted.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteArtistRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.DeleteArtistRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteArtistRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteArtistRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteArtistRequest;

  static equals(a: DeleteArtistRequest | PlainMessage<DeleteArtistRequest> | undefined, b: DeleteArtistRequest | PlainMessage<DeleteArtistRequest> | undefined): boolean;
}

/**
 *
 * Artist deletion response
 *
 * @generated from message musicservice.v1.DeleteArtistResponse
 */
export declare class DeleteArtistResponse extends Message<DeleteArtistResponse> {
  constructor(data?: PartialMessage<DeleteArtistResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.DeleteArtistResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteArtistResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteArtistResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteArtistResponse;

  static equals(a: DeleteArtistResponse | PlainMessage<DeleteArtistResponse> | undefined, b: DeleteArtistResponse | PlainMessage<DeleteArtistResponse> | undefined): boolean;
}

