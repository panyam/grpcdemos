// @generated by protoc-gen-es v1.2.0
// @generated from file musicservice/v1/albums.proto (package musicservice.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, FieldMask, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Album } from "./models_pb.js";

/**
 *
 * Album creation request object
 *
 * @generated from message musicservice.v1.CreateAlbumRequest
 */
export declare class CreateAlbumRequest extends Message<CreateAlbumRequest> {
  /**
   *
   * Album being updated
   *
   * @generated from field: musicservice.v1.Album album = 1;
   */
  album?: Album;

  constructor(data?: PartialMessage<CreateAlbumRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.CreateAlbumRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAlbumRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAlbumRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAlbumRequest;

  static equals(a: CreateAlbumRequest | PlainMessage<CreateAlbumRequest> | undefined, b: CreateAlbumRequest | PlainMessage<CreateAlbumRequest> | undefined): boolean;
}

/**
 *
 * Response of an album creation.
 *
 * @generated from message musicservice.v1.CreateAlbumResponse
 */
export declare class CreateAlbumResponse extends Message<CreateAlbumResponse> {
  /**
   *
   * Album being created
   *
   * @generated from field: musicservice.v1.Album album = 1;
   */
  album?: Album;

  constructor(data?: PartialMessage<CreateAlbumResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.CreateAlbumResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAlbumResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAlbumResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAlbumResponse;

  static equals(a: CreateAlbumResponse | PlainMessage<CreateAlbumResponse> | undefined, b: CreateAlbumResponse | PlainMessage<CreateAlbumResponse> | undefined): boolean;
}

/**
 *
 * The request for (partially) updating an Album.
 *
 * @generated from message musicservice.v1.UpdateAlbumRequest
 */
export declare class UpdateAlbumRequest extends Message<UpdateAlbumRequest> {
  /**
   *
   * Album being updated
   *
   * @generated from field: musicservice.v1.Album album = 1;
   */
  album?: Album;

  /**
   *
   * Mask of fields being updated in this Album to make partial changes.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateAlbumRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.UpdateAlbumRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAlbumRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAlbumRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAlbumRequest;

  static equals(a: UpdateAlbumRequest | PlainMessage<UpdateAlbumRequest> | undefined, b: UpdateAlbumRequest | PlainMessage<UpdateAlbumRequest> | undefined): boolean;
}

/**
 *
 * The request for (partially) updating an Album.
 *
 * @generated from message musicservice.v1.UpdateAlbumResponse
 */
export declare class UpdateAlbumResponse extends Message<UpdateAlbumResponse> {
  /**
   *
   * Album being updated
   *
   * @generated from field: musicservice.v1.Album album = 1;
   */
  album?: Album;

  constructor(data?: PartialMessage<UpdateAlbumResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.UpdateAlbumResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAlbumResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAlbumResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAlbumResponse;

  static equals(a: UpdateAlbumResponse | PlainMessage<UpdateAlbumResponse> | undefined, b: UpdateAlbumResponse | PlainMessage<UpdateAlbumResponse> | undefined): boolean;
}

/**
 *
 * Batch gets multiple albums.
 *
 * @generated from message musicservice.v1.GetAlbumsRequest
 */
export declare class GetAlbumsRequest extends Message<GetAlbumsRequest> {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];

  constructor(data?: PartialMessage<GetAlbumsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.GetAlbumsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAlbumsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAlbumsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAlbumsRequest;

  static equals(a: GetAlbumsRequest | PlainMessage<GetAlbumsRequest> | undefined, b: GetAlbumsRequest | PlainMessage<GetAlbumsRequest> | undefined): boolean;
}

/**
 *
 * Response for an album batch get.
 *
 * @generated from message musicservice.v1.GetAlbumsResponse
 */
export declare class GetAlbumsResponse extends Message<GetAlbumsResponse> {
  /**
   *
   * Albums mapped by their ID.
   *
   * @generated from field: map<string, musicservice.v1.Album> albums = 1;
   */
  albums: { [key: string]: Album };

  constructor(data?: PartialMessage<GetAlbumsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.GetAlbumsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAlbumsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAlbumsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAlbumsResponse;

  static equals(a: GetAlbumsResponse | PlainMessage<GetAlbumsResponse> | undefined, b: GetAlbumsResponse | PlainMessage<GetAlbumsResponse> | undefined): boolean;
}

/**
 *
 * An album search request.  For now only paginations params are provided.
 *
 * @generated from message musicservice.v1.ListAlbumsRequest
 */
export declare class ListAlbumsRequest extends Message<ListAlbumsRequest> {
  /**
   *
   * Instead of an offset an abstract  "page" key is provided that offers
   * an opaque "pointer" into some offset in a result set.
   *
   * @generated from field: string page_key = 1;
   */
  pageKey: string;

  /**
   *
   * Number of results to return.
   *
   * @generated from field: int32 count = 2;
   */
  count: number;

  constructor(data?: PartialMessage<ListAlbumsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.ListAlbumsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAlbumsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAlbumsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAlbumsRequest;

  static equals(a: ListAlbumsRequest | PlainMessage<ListAlbumsRequest> | undefined, b: ListAlbumsRequest | PlainMessage<ListAlbumsRequest> | undefined): boolean;
}

/**
 *
 * Response of a album search/listing.
 *
 * @generated from message musicservice.v1.ListAlbumsResponse
 */
export declare class ListAlbumsResponse extends Message<ListAlbumsResponse> {
  /**
   *
   * The list of albums found as part of this response.
   *
   * @generated from field: repeated musicservice.v1.Album albums = 1;
   */
  albums: Album[];

  /**
   *
   * The key/pointer string that subsequent List requests should pass to
   * continue the pagination.
   *
   * @generated from field: string next_page_key = 2;
   */
  nextPageKey: string;

  constructor(data?: PartialMessage<ListAlbumsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.ListAlbumsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAlbumsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAlbumsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAlbumsResponse;

  static equals(a: ListAlbumsResponse | PlainMessage<ListAlbumsResponse> | undefined, b: ListAlbumsResponse | PlainMessage<ListAlbumsResponse> | undefined): boolean;
}

/**
 *
 * Request to delete an album.
 *
 * @generated from message musicservice.v1.DeleteAlbumRequest
 */
export declare class DeleteAlbumRequest extends Message<DeleteAlbumRequest> {
  /**
   *
   * ID of the album to be deleted.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteAlbumRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.DeleteAlbumRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAlbumRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAlbumRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAlbumRequest;

  static equals(a: DeleteAlbumRequest | PlainMessage<DeleteAlbumRequest> | undefined, b: DeleteAlbumRequest | PlainMessage<DeleteAlbumRequest> | undefined): boolean;
}

/**
 *
 * Album deletion response
 *
 * @generated from message musicservice.v1.DeleteAlbumResponse
 */
export declare class DeleteAlbumResponse extends Message<DeleteAlbumResponse> {
  constructor(data?: PartialMessage<DeleteAlbumResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.DeleteAlbumResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAlbumResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAlbumResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAlbumResponse;

  static equals(a: DeleteAlbumResponse | PlainMessage<DeleteAlbumResponse> | undefined, b: DeleteAlbumResponse | PlainMessage<DeleteAlbumResponse> | undefined): boolean;
}

