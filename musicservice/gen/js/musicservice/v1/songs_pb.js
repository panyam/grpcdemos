// @generated by protoc-gen-es v1.1.1
// @generated from file musicservice/v1/songs.proto (package musicservice, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3 } from "@bufbuild/protobuf";
import { Song } from "./models_pb.js";

/**
 *
 * Song creation request object
 *
 * @generated from message musicservice.CreateSongRequest
 */
export const CreateSongRequest = proto3.makeMessageType(
  "musicservice.CreateSongRequest",
  () => [
    { no: 1, name: "song", kind: "message", T: Song },
  ],
);

/**
 *
 * Response of an song creation.
 *
 * @generated from message musicservice.CreateSongResponse
 */
export const CreateSongResponse = proto3.makeMessageType(
  "musicservice.CreateSongResponse",
  () => [
    { no: 1, name: "song", kind: "message", T: Song },
  ],
);

/**
 *
 * The request for (partially) updating an Song.
 *
 * @generated from message musicservice.UpdateSongRequest
 */
export const UpdateSongRequest = proto3.makeMessageType(
  "musicservice.UpdateSongRequest",
  () => [
    { no: 1, name: "song", kind: "message", T: Song },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ],
);

/**
 *
 * The request for (partially) updating an Song.
 *
 * @generated from message musicservice.UpdateSongResponse
 */
export const UpdateSongResponse = proto3.makeMessageType(
  "musicservice.UpdateSongResponse",
  () => [
    { no: 1, name: "song", kind: "message", T: Song },
  ],
);

/**
 *
 * Batch gets multiple songs.
 *
 * @generated from message musicservice.GetSongsRequest
 */
export const GetSongsRequest = proto3.makeMessageType(
  "musicservice.GetSongsRequest",
  () => [
    { no: 1, name: "ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 *
 * Response for an song batch get.
 *
 * @generated from message musicservice.GetSongsResponse
 */
export const GetSongsResponse = proto3.makeMessageType(
  "musicservice.GetSongsResponse",
  () => [
    { no: 1, name: "songs", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Song} },
  ],
);

/**
 *
 * An song search request.  For now only paginations params are provided.
 *
 * @generated from message musicservice.ListSongsRequest
 */
export const ListSongsRequest = proto3.makeMessageType(
  "musicservice.ListSongsRequest",
  () => [
    { no: 1, name: "page_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 *
 * Response of a song search/listing.
 *
 * @generated from message musicservice.ListSongsResponse
 */
export const ListSongsResponse = proto3.makeMessageType(
  "musicservice.ListSongsResponse",
  () => [
    { no: 1, name: "songs", kind: "message", T: Song, repeated: true },
    { no: 2, name: "next_page_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Request to delete an song.
 *
 * @generated from message musicservice.DeleteSongRequest
 */
export const DeleteSongRequest = proto3.makeMessageType(
  "musicservice.DeleteSongRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Song deletion response
 *
 * @generated from message musicservice.DeleteSongResponse
 */
export const DeleteSongResponse = proto3.makeMessageType(
  "musicservice.DeleteSongResponse",
  [],
);

