// @generated by protoc-gen-es v1.2.0
// @generated from file musicservice/v1/songs.proto (package musicservice.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, FieldMask, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Song } from "./models_pb.js";

/**
 *
 * Song creation request object
 *
 * @generated from message musicservice.v1.CreateSongRequest
 */
export declare class CreateSongRequest extends Message<CreateSongRequest> {
  /**
   *
   * Song being updated
   *
   * @generated from field: musicservice.v1.Song song = 1;
   */
  song?: Song;

  constructor(data?: PartialMessage<CreateSongRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.CreateSongRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateSongRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateSongRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateSongRequest;

  static equals(a: CreateSongRequest | PlainMessage<CreateSongRequest> | undefined, b: CreateSongRequest | PlainMessage<CreateSongRequest> | undefined): boolean;
}

/**
 *
 * Response of an song creation.
 *
 * @generated from message musicservice.v1.CreateSongResponse
 */
export declare class CreateSongResponse extends Message<CreateSongResponse> {
  /**
   *
   * Song being created
   *
   * @generated from field: musicservice.v1.Song song = 1;
   */
  song?: Song;

  constructor(data?: PartialMessage<CreateSongResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.CreateSongResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateSongResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateSongResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateSongResponse;

  static equals(a: CreateSongResponse | PlainMessage<CreateSongResponse> | undefined, b: CreateSongResponse | PlainMessage<CreateSongResponse> | undefined): boolean;
}

/**
 *
 * The request for (partially) updating an Song.
 *
 * @generated from message musicservice.v1.UpdateSongRequest
 */
export declare class UpdateSongRequest extends Message<UpdateSongRequest> {
  /**
   *
   * Song being updated
   *
   * @generated from field: musicservice.v1.Song song = 1;
   */
  song?: Song;

  /**
   *
   * Mask of fields being updated in this Song to make partial changes.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateSongRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.UpdateSongRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSongRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSongRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSongRequest;

  static equals(a: UpdateSongRequest | PlainMessage<UpdateSongRequest> | undefined, b: UpdateSongRequest | PlainMessage<UpdateSongRequest> | undefined): boolean;
}

/**
 *
 * The request for (partially) updating an Song.
 *
 * @generated from message musicservice.v1.UpdateSongResponse
 */
export declare class UpdateSongResponse extends Message<UpdateSongResponse> {
  /**
   *
   * Song being updated
   *
   * @generated from field: musicservice.v1.Song song = 1;
   */
  song?: Song;

  constructor(data?: PartialMessage<UpdateSongResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.UpdateSongResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSongResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSongResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSongResponse;

  static equals(a: UpdateSongResponse | PlainMessage<UpdateSongResponse> | undefined, b: UpdateSongResponse | PlainMessage<UpdateSongResponse> | undefined): boolean;
}

/**
 *
 * Batch gets multiple songs.
 *
 * @generated from message musicservice.v1.GetSongsRequest
 */
export declare class GetSongsRequest extends Message<GetSongsRequest> {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];

  constructor(data?: PartialMessage<GetSongsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.GetSongsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSongsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSongsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSongsRequest;

  static equals(a: GetSongsRequest | PlainMessage<GetSongsRequest> | undefined, b: GetSongsRequest | PlainMessage<GetSongsRequest> | undefined): boolean;
}

/**
 *
 * Response for an song batch get.
 *
 * @generated from message musicservice.v1.GetSongsResponse
 */
export declare class GetSongsResponse extends Message<GetSongsResponse> {
  /**
   *
   * Songs mapped by their ID.
   *
   * @generated from field: map<string, musicservice.v1.Song> songs = 1;
   */
  songs: { [key: string]: Song };

  constructor(data?: PartialMessage<GetSongsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.GetSongsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSongsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSongsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSongsResponse;

  static equals(a: GetSongsResponse | PlainMessage<GetSongsResponse> | undefined, b: GetSongsResponse | PlainMessage<GetSongsResponse> | undefined): boolean;
}

/**
 *
 * An song search request.  For now only paginations params are provided.
 *
 * @generated from message musicservice.v1.ListSongsRequest
 */
export declare class ListSongsRequest extends Message<ListSongsRequest> {
  /**
   *
   * Instead of an offset an abstract  "page" key is provided that offers
   * an opaque "pointer" into some offset in a result set.
   *
   * @generated from field: string page_key = 1;
   */
  pageKey: string;

  /**
   *
   * Number of results to return.
   *
   * @generated from field: int32 count = 2;
   */
  count: number;

  constructor(data?: PartialMessage<ListSongsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.ListSongsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSongsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSongsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSongsRequest;

  static equals(a: ListSongsRequest | PlainMessage<ListSongsRequest> | undefined, b: ListSongsRequest | PlainMessage<ListSongsRequest> | undefined): boolean;
}

/**
 *
 * Response of a song search/listing.
 *
 * @generated from message musicservice.v1.ListSongsResponse
 */
export declare class ListSongsResponse extends Message<ListSongsResponse> {
  /**
   *
   * The list of songs found as part of this response.
   *
   * @generated from field: repeated musicservice.v1.Song songs = 1;
   */
  songs: Song[];

  /**
   *
   * The key/pointer string that subsequent List requests should pass to
   * continue the pagination.
   *
   * @generated from field: string next_page_key = 2;
   */
  nextPageKey: string;

  constructor(data?: PartialMessage<ListSongsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.ListSongsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSongsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSongsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSongsResponse;

  static equals(a: ListSongsResponse | PlainMessage<ListSongsResponse> | undefined, b: ListSongsResponse | PlainMessage<ListSongsResponse> | undefined): boolean;
}

/**
 *
 * Request to delete an song.
 *
 * @generated from message musicservice.v1.DeleteSongRequest
 */
export declare class DeleteSongRequest extends Message<DeleteSongRequest> {
  /**
   *
   * ID of the song to be deleted.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteSongRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.DeleteSongRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteSongRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteSongRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteSongRequest;

  static equals(a: DeleteSongRequest | PlainMessage<DeleteSongRequest> | undefined, b: DeleteSongRequest | PlainMessage<DeleteSongRequest> | undefined): boolean;
}

/**
 *
 * Song deletion response
 *
 * @generated from message musicservice.v1.DeleteSongResponse
 */
export declare class DeleteSongResponse extends Message<DeleteSongResponse> {
  constructor(data?: PartialMessage<DeleteSongResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "musicservice.v1.DeleteSongResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteSongResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteSongResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteSongResponse;

  static equals(a: DeleteSongResponse | PlainMessage<DeleteSongResponse> | undefined, b: DeleteSongResponse | PlainMessage<DeleteSongResponse> | undefined): boolean;
}

